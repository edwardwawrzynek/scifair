; A language using s-expressions
; not lisp (very much incomptabile)
( func arg1 arg2 arg3)
; Types
; builtins
int
char
; arrays
(array int)
; strings
(array char)
; user defined types
(defstruct person (
  (name (array char))
  (age int)
  (parent (struct person))))
; user defined type literals
(struct person (name "hello") (age 0) (parent null))

; Variable definition
(setq (var int) 1)

; Assignment
(= var (+ var 1))

; Function calls

(+ arg1 arg2)

; Conditionals
(cond (== var 1) (print "var is 1")
      (== var 2) (print "var is 2")
      true (print "var is not 1 or 2"))

; Functions expressions
(lambda int ((a int) (b int)) 
  (+ a b))

; Named functions (no special syntax)
(defun sum int ((a int) (b int))
  (+ a b))

; Loops
(for (setq (i int) 0) (< i 5) (= i (+ i 1)) (
  (print i)
))